# Task ID: 7
# Title: Implement 'reveal' Tool
# Status: pending
# Dependencies: 2, 5, 6
# Priority: medium
# Description: Create the 'reveal' tool that returns data previously generated by the 'imagine' tool within the same session.
# Details:
1. Create `src/server/tools/reveal.ts`
2. Implement the reveal tool that retrieves data stored in the session by the imagine tool
3. Define the tool's schema and parameters
4. Implement streaming response capability

```typescript
import { Tool, StreamingToolCall } from '@modelcontextprotocol/sdk';
import { sessionStore } from '../sessionStore';

export const revealTool: Tool = {
  name: 'reveal',
  description: 'Returns data previously generated by the imagine tool in the same session',
  parameters: {
    type: 'object',
    properties: {
      format: {
        type: 'string',
        enum: ['json', 'string'],
        description: 'Format to return the data in',
        default: 'json'
      }
    },
    required: []
  },
  handler: async (params: any, context: { sessionId: string }, streamingToolCall?: StreamingToolCall) => {
    const { format = 'json' } = params;
    
    // Retrieve the session data
    const session = sessionStore.getSession(context.sessionId);
    
    if (!session.imaginedData) {
      throw new Error('No data has been generated with the imagine tool in this session');
    }
    
    const result = session.imaginedData;
    
    // Stream the result if streaming is enabled
    if (streamingToolCall) {
      streamingToolCall.streamContent(`Retrieving previously imagined data...\n`);
      await new Promise(resolve => setTimeout(resolve, 300)); // Simulate work
      
      if (format === 'string') {
        streamingToolCall.streamContent(`Retrieved: ${result.toString()}\n`);
      } else {
        streamingToolCall.streamContent(`Retrieved: ${JSON.stringify(result)}\n`);
      }
    }
    
    return format === 'string' ? result.toString() : result;
  }
};
```

# Test Strategy:
Test the reveal tool by first using the imagine tool to generate data, then using reveal to retrieve it. Verify that the tool correctly returns the data in the requested format. Test both streaming and non-streaming responses. Verify that the tool handles the case where no data has been generated.
